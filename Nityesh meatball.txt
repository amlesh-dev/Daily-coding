
/*Nityesh likes meatballs very much.

He has N plates of meatballs, here the ith plate contains Pi meatballs. You need to find the minimal number of plates Nityesh needs to take to his trip to Las Vegas, if he wants to eat there at least M meatballs. Note that each plate is already packed, i.e. he cannot change the amount of meatballs on any plate.

Input Format

The first line of the input contains an integer T, denoting the number of test cases. The description of T test cases follows. The first line of each test case contains two space-separated integers N and M. The second line contains N space-separated integers P1, P2, ..., PN.

Constraints

1 ≤ T ≤ 7777 1 ≤ N ≤ 7 1 ≤ M, Pi ≤ 1018

Output Format

For each test case, output an integer, denoting the minimum number of plates. If it's impossible to take at least M meatballs, print -1.

Sample Input 0

1
4 7
1 2 3 4
Sample Output 0

2
Explanation 0

If he takes 3rd and 4th plates, then we may eat P3 + P4 = 7 meatballs in Las Vegas. This is the only way for eating at least M = 7 meatballs with 2 plates.*/

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() 
{
    int t;
    cin>>t;
    while(t--)
    {
        long n,m;
        cin>>n>>m;
        long a[n];
        for(int i=0;i<n;i++)
            cin>>a[i];
        long c=0,s=0;
        sort(a,a+n);
        for(long int i=n-1;i>=0;i--)
        {
            if(a[i]<m && s<m)
            {
                s=s+a[i];
                c++;
            }
            if(a[i]>=m && s<m)
            {
                s=s+a[i];
                c=1;
                break;
            }
        }
        if(s>=m)
            cout<<c<<endl;
        else
            cout<<-1<<endl;
    }
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    return 0;
}